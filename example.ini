###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/environment.html
###

[app:main]
use = egg:modmod

isProduction = false

external.host = oice.com

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar
    pyramid_tm
auth.secret = 'modmod'
auth.timeout = 1209600

redis.host = redis
redis.port = 6379
redis.password =
sqlalchemy.url = mysql+pymysql://root@oice-db:3306/modmod?charset=utf8mb4

# o2 config
o2.build_script = /builder3/o2_build.sh
o2.resize_script = /builder3/image_resize.sh
o2.output_dir = /view/%%(ks_uuid)s
o2.view_url = http://localhost/story/%%(ks_uuid)s
o2.oice_url = http://localhost/view/%%(ks_uuid)s
o2.oice_communication_url = http://localhost/api/v2/oice/communication

# Localization
locale.default_lang = en

# gcloud storage option
gcloud.enable_upload = false
gcloud.json_path = /google_cred/cred.json
gcloud.project_id = 
gcloud.bucket_id = localhost

# Crisp
crisp.secret_key =

# stripe config
stripe.api_key =
stripe.price_id =

# Voucher API
voucher_api.url =
voucher_api.key =

# cloud function API
oice.cloud_function_api_base_url =

oice.upload_base_url = http://localhost
upload_dir = /upload

# preflight request
cors.preflight = true

# elastic search
es.enable = false
es.host =
es.max_suggest =
es.aws_access_key =
es.aws_secret_key =
es.aws_region =

# elastic search log whitelist
# Do not authenticate for these comma-separated paths in views/log.py
eslog.whitelist =
eslog.key =

# Slack integration
slack.enable = false
slack.webhook_url =
slack.username =
slack.icon_url =

# testflight
testflight.account =
testflight.pass =
testflight.provider_id =
testflight.app_id =
testflight.testers_group_id =

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

[alembic]
# path to migration scripts
script_location = alembic

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# max length of characters to apply to the
# "slug" field
#truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; this defaults
# to alembic/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/bar %(here)s/bat alembic/versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

sqlalchemy.url = mysql+pymysql://root@oice-db:3306/modmod?charset=utf8mb4



###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/logging.html
###

[loggers]
keys = root, modmod, sqlalchemy, alembic, vote

[handlers]
keys = console, vote

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_modmod]
level = DEBUG
handlers =
qualname = modmod

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[logger_vote]
level = DEBUG
handlers = vote
qualname = modmod.vote

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_vote]
class = FileHandler
args = ('modmod_vote.log','a')
level = DEBUG
formatter = generic

[formatter_generic]
format = %(asctime)s: %(message)s
