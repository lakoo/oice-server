"""Split project into story and library

Revision ID: 2a0b6af9f1c
Revises: 196f7d0996b
Create Date: 2016-11-10 12:34:50.459687

"""

# revision identifiers, used by Alembic.
revision = '2a0b6af9f1c'
down_revision = '12da8bc7f96'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('library',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('name', sa.Unicode(length=1024), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, server_default="0"),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_table('story',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('name', sa.Unicode(length=1024), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, server_default="0"),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_table('user_story',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('story_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['story_id'], ['story.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    )
    op.create_table('story_library',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('story_id', sa.Integer(), nullable=False),
    sa.Column('library_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['library_id'], ['library.id'], ),
    sa.ForeignKeyConstraint(['story_id'], ['story.id'], ),
    sa.PrimaryKeyConstraint('id'),
    )
    op.create_table('user_library',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('library_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['library_id'], ['library.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    )
    op.drop_constraint('asset_ibfk_1', 'asset', type_='foreignkey')
    op.drop_constraint('ks_ibfk_1', 'ks', type_='foreignkey')
    op.drop_constraint('macro_ibfk_1', 'macro', type_='foreignkey')
    op.drop_constraint('character_ibfk1', 'character', type_='foreignkey')
    op.drop_index('uq_project_id_key', table_name='character')

    conn = op.get_bind()
    conn.execute("""
        INSERT INTO story (id, created_at, updated_at, name, is_deleted) SELECT id, created_at, updated_at, name, is_deleted FROM project WHERE is_lib_project = 0""")
    conn.execute("""
        INSERT INTO library (id, created_at, updated_at, name, is_deleted) SELECT id, created_at, updated_at, name, is_deleted FROM project WHERE is_lib_project = 1""")
    conn.execute("""
        INSERT INTO user_story (user_id, story_id) SELECT user_id, project_id FROM user_project""")
    conn.execute("""
        INSERT INTO story_library (story_id, library_id) SELECT project_id, lib_project_id FROM project_lib_project WHERE project_id <> lib_project_id""")

    op.drop_table('user_project')
    op.drop_table('project_import')
    op.drop_table('project_lib_project')
    op.add_column('asset', sa.Column('library_id', sa.Integer(), nullable=False))
    op.add_column('macro', sa.Column('library_id', sa.Integer(), nullable=True))
    op.add_column('character', sa.Column('library_id', sa.Integer(), nullable=True))
    op.add_column('ks', sa.Column('story_id', sa.Integer(), nullable=True))
    conn.execute("""
        UPDATE asset SET library_id = project_id""")
    conn.execute("""
        UPDATE macro SET library_id = project_id""")
    conn.execute("""
        UPDATE `character` SET library_id = project_id""")
    conn.execute("""
        UPDATE ks SET story_id = project_id""")
    op.drop_column('asset', 'project_id')
    op.drop_column('macro', 'project_id')
    op.drop_column('character', 'project_id')
    op.drop_column('ks', 'project_id')
    op.drop_constraint('project_export_ibfk_1', 'project_export', type_='foreignkey')
    op.drop_table('project')
    op.create_foreign_key(None, 'asset', 'library', ['library_id'], ['id'])
    op.create_foreign_key(None, 'ks', 'poll', ['poll_id'], ['id'])
    op.create_foreign_key(None, 'ks', 'story', ['story_id'], ['id'])
    op.create_foreign_key(None, 'macro', 'library', ['library_id'], ['id'])
    op.create_foreign_key(None, 'character', 'library', ['library_id'], ['id'])
    op.create_foreign_key(None, 'project_export', 'story', ['project_id'], ['id'])
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    raise Exception("THIS Revision is NOT backward compatible")
    ### end Alembic commands ###
